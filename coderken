def display_board(board):
    n = int(len(board) ** 0.5)  # This is to get the board side length, board alrd has a predetermined value
    print("=" * (n * 4 + 1))      # Each cell takes up 4 characters (" X |"), and there is 1 extra border on the left.
                                         # So total width of the board border = n * 4 + 1.
    
    for i in range(n):
        row_str = "|"             #The left border      
        for j in range(n):
            symbol = " "           # Each cell is assumed to be blank
            if board[i*n + j] == 1:
                symbol = "X"       #defines X
            elif board[i*n + j] == 2:
                symbol = "O"       #Defines O
            row_str += f" {symbol} |"
        print(row_str)             
        if i < n - 1:
            print("|" + "---|" * n)   #Creates the border in between the cell.
    
    print("=" * (n * 4 + 1))
    
    # Display index numbers for reference
    print("\nIndex positions:")
    for i in range(n):
        row_str = ""
        for j in range(n):
            row_str += f" {i*n + j:2d} "
        print(row_str)
    print()
# %%



def menu():
    print("Welcome to Quixo!")
    print("1. Play vs Computer")                   
#This part displays the game’s welcome message and gives the user two options — (1) to play the game, or (2) to quit. 
#Then it uses input() to get what the player types.
    print("2. Quit")
    choice = input("Enter your choice (1 or 2): ")
    if choice != "1":
        print("Goodbye!")
        return

    board = [0] * 25
    turn = 1
    display_board(board)
    winner = -1

    while winner == -1:
        print(f"\nPlayer {turn}'s turn:")
        if turn == 1:
            index = int(input("Enter cube index (0–24): "))
            push_from = input("Enter direction (T, B, L, R): ").upper()
            if check_move(board, turn, index, push_from):
                board = apply_move(board, turn, index, push_from)
            else:
                print("Invalid move! Try again.")
                continue
        else:
            print("Computer is thinking...")
            index, push_from = computer_move(board, turn, 1)
            print(f"Computer chose index {index} from {push_from}")
            board = apply_move(board, turn, index, push_from)

        display_board(board)
        winner = check_victory(board, turn)
        if winner == -1:
            turn = 2 if turn == 1 else 1

    print(f"\nPlayer {winner} wins!")
    


def menu():
    """
    Main menu function to handle game setup and flow.
    """
    print("Welcome to Quixo!")
    print("=" * 50)
    
    # Get board size
    while True:
        try:
            n = int(input("Enter board size (default 5): ") or 5)
            if n < 3:
                print("Board size must be at least 3.")
                continue
            break
        except ValueError:
            print("Please enter a valid number.")
    
    # Initialize board
    board = [0] * (n * n)
    
    # Get player types
    print("\nPlayer types:")
    print("1. Human")
    print("2. Computer")
    
    player1_type = get_player_type("Player 1 (X)")
    player2_type = get_player_type("Player 2 (O)")
    
    # Get computer difficulty if applicable
    player1_level = 1
    player2_level = 1
    
    if player1_type == "computer":
        player1_level = get_computer_level("Player 1")
    
    if player2_type == "computer":
        player2_level = get_computer_level("Player 2")
    
    # Start the game
    play_game(board, player1_type, player2_type, player1_level, player2_level)
